---
import { Image, Picture } from 'astro:assets';
import { getCollection, render } from 'astro:content';
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { id: post.id },
    props: { post },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { post } = Astro.props;
const { Content } = await render(post);

const imgSrc = post.data.featuredImage?.image;

const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/media/blog/*.{jpeg,jpg,png,gif}'
);

if (!imgSrc)
  throw new Error(
    `"${imgSrc}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
  );

console.log(images);
---

<h1>{post.data.title} Th</h1>

<pre>{JSON.stringify(post.data.featuredImage?.image, null, 2)}</pre>

{
  imgSrc && (
    <Picture src={images[imgSrc]()} alt={post.data.featuredImage?.alt || ''} />
  )
}
<!-- {
  post.data.featuredImage && post.data.featuredImage.image && (
    <Image src={post.data.featuredImage?.image} alt="" />
  )
} -->

<!-- {
  post.data.featuredImage && post.data.featuredImage.image.src && (
    <Image
      src={post.data.featuredImage}
      quality={100}
      loading="eager"
      style="object-fit: cover;"
      class="rounded-md w-full max-h-[300px]  md:max-h-[500px] my-8 object-cover"
      alt={post.data.featuredImage.alt}
    />
  )
} -->
{post.data.description}

<Content />
