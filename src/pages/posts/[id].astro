---
import { Image, Picture } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';
import { getCollection, render } from 'astro:content';
import FeaturedImage from '../../components/FeaturedImage.astro';
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { id: post.id },
    props: { post },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { post } = Astro.props;
const { Content } = await render(post);

// const imgSrc = post.data.featuredImage?.image;

// const images = import.meta.glob<{ default: ImageMetadata }>(
//   '/src/media/blog/*.{jpeg,jpg,png,gif}'
// );

// if (!imgSrc)
//   throw new Error(
//     `"${imgSrc}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
//   );

// console.log(images);
---

<Layout>
  <main class="max-w-5xl mx-auto space-y-6 my-24">
    <h1 class="font-black text-4xl mx-auto w-fit">{post.data.title}</h1>

    <!-- {
      imgSrc && (
        <Picture
          class="rounded-md w-auto mx-auto object-cover overflow-clip my-8 bg-amber-50 p-5"
          src={images[imgSrc]()}
          alt={post.data.featuredImage?.alt || ''}
          formats={['avif', 'webp']}
        />
      )
    } -->

    <!-- {
      post.data.featuredImage && post.data.featuredImage.image && (
        <Picture
          src={post.data.featuredImage.image}
          quality={100}
          loading="eager"
          formats={['avif', 'webp']}
          class="rounded-md w-fit mx-auto shadow-2xl max-h-[300px] md:max-h-[500px] my-12 object-cover"
          alt={post.data.featuredImage.alt}
        />
      )
    } -->

    {
      post.data.featuredImage && post.data.featuredImage.image && (
        <FeaturedImage
          image={post.data.featuredImage.image}
          altText={post.data.featuredImage.alt}
          variant="rounded"
          caption="This is the image caption"
        />
      )
    }

    <div class="prose mx-auto">
      {post.data.description && <p>{post.data.description}</p>}

      <Content />
    </div>
  </main>
</Layout>
